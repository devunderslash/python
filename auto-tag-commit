#!/bin/bash  

# The following script is for committing, tagging and pushing code. 
# It is a very basic example. Once you git add, you can then run this 

echo "Select Release Type"
select release in Major Minor Patch quit
do 
if [ "$release" != "" ]
    echo "Release Type Selected: $release"
    then
        break
    fi
done

# Get current release tag and store it
CURRTAG=$(git describe --abbrev=0 --tags)
# Remove "v" 
TAGNUMS=$(echo $CURRTAG | sed 's/v//')

# Cut postion from "." delimited
MAJ="$(cut -d'.' -f1 <<<$TAGNUMS)"
MIN="$(cut -d'.' -f2 <<<$TAGNUMS)"
PAT="$(cut -d'.' -f3 <<<$TAGNUMS)"

# Set new SemVer Version number
if [ "$release" == "Major" ]; then
    echo "It's Major"
    NEWMAJ=$(($MAJ + 1))
    NEWMIN=0
    NEWPAT=0
fi

if [ "$release" == "Minor" ]; then
    echo "It's Minor"
    NEWMAJ=$MAJ
    NEWMIN=$(($MIN + 1))
    NEWPAT=0
fi

if [ "$release" == "Patch" ]; then
    echo "It's a Patch"
    NEWMAJ=$MAJ
    NEWMIN=$MIN
    NEWPAT=$(($PAT + 1))
fi

# Echo new Version Number
NEWVER=$(echo "v${NEWMAJ}.${NEWMIN}.${NEWPAT}")

echo $NEWVER    

read -p "Add commit message " message

echo "Commit message is: $message and tag is $NEWVER. Do you want to continue?" 
select confirm in Yes No
do 
    if [ "$confirm" == "Yes" ]
    then
        git commit -m "$message"
        git tag $NEWVER
        git push --follow-tags
        echo "Changes committed and Pushed"
        break
    else
        echo "Changes not committed"
        break
    fi
done
